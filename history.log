    1  exit
    2  sudo apt update
    3  sudo apt upgrade
    4  sudo apt install apt-transport-https curl
    5  sudo curl -fsSLo /usr/share/keyrings/brave-browser-archive-keyring.gpg https://brave-browser-apt-release.s3.brave.com/brave-browser-archive-keyring.gpg
    6  echo "deb [signed-by=/usr/share/keyrings/brave-browser-archive-keyring.gpg arch=amd64] https://brave-browser-apt-release.s3.brave.com/ stable main"|sudo tee /etc/apt/sources.list.d/brave-browser-release.list
    7  sudo apt update
    8  sudo apt install brave-browser
    9  sudo timedatectl set-local-rtc 1 --adjust-system-clock
   10  exit
   11  sudo apt install nkf
   12  sudo gem install bundler
   13  sudo apt list ruby
   14  sudo apt install ruby
   15  ruby --version
   16  sudo apt list ruby
   17  sudo gem install bundler
   18  sudo add-apt-repository -y ppa:alessandro-strada/ppa && sudo apt update && sudo apt install -y google-drive-ocamlfuse
   19  mkdir ~/googleDrive
   20  google-drive-ocamlfuse ~/googleDrive/
   21  ls googleDrive/
   22  nvim .profile 
   23  sudo apt install neovim
   24  nvim .profile 
   25  exit
   26  nvim .profile
   27  exit
   28  ps -a
   29  top
   30  ls googleDrive/computers/linux/home/bin/
   31  ls bin
   32  ls lib/ruby/
   33  ls googleDrive/computers/linux/
   34  ls googleDrive/computers/
   35  nvim googleDrive/computers/linux/mint_setup.txt 
   36  ls googleDrive/computers/linux/
   37  ls googleDrive/computers/linux/home/
   38  ls bin
   39  exit
   40  ls googleDrive/
   41  ls googleDrive/computers/linux/home/
   42  cp -r googleDrive/computers/linux/home/* .
   43  chmod +x bin/*
   44  ls bin
   45  mkdir work
   46  cd work
   47  cd
   48  nvim .bashrc
   49  exit
   50  nvim .profile 
   51  source .profile
   52  ls googleDrive/
   53  ls googleDrive/computers/linux/home/bashrc 
   54  nvim .bashrc
   55  exit
   56  ls
   57  ln --help
   58  exit
   59  ls $DOWNLOADS
   60  cd $DOWNLOADS
   61  cd
   62  cd work
   63  run_get_favorite 
   64  sudo apt install ruby-dev
   65  sudo apt install zlib1g-dev
   66  sudo apt install build-essential
   67  sudo gem install nokogiri
   68  git --version
   69  sudo apt install git
   70  run_get_favorite 
   71  ls
   72  rm ../*.csv
   73  exit
   74  dpkg --help
   75  sudo dpkg -i pfusp-ubuntu18.04_2.1.1_amd64.deb 
   76  sudo dpkg -l pfusp
   77  xsane
   78  sudo apt install xsane
   79  xsane
   80  dpkg -r pfusp
   81  sudo dpkg -r pfusp
   82  sudo dpkg -i pfusp-ubuntu18.04_2.1.1_amd64.deb 
   83  sudo dpkg -l pfusp
   84  xsane
   85  history
   86  sudo dpkg -r pfusp
   87  sudo dpkg --purge pfusp
   88  sudo dpkg -l pfusp
   89  sudo apt update
   90  sudo apt upgrade
   91  exit
   92  sudo apt update
   93  sudo apt upgrade
   94  exit
   95  sudo apt update
   96  sudo apt upgrade
   97  exit
   98  cd $DOWNLOADS
   99  ls
  100  nvim nishi.txt 
  101  nvim nishi.csv 
  102  nvim kanda.txt
  103  exit
  104  sudo apt install imagemagick-6.q16hdri
  105  sudo nvim /etc/ImageMagick-6/policy.xml 
  106  cd ドキュメント
  107  ls
  108  convert ローン西新宿_2022H1.pdf nisisinnjyuku.jpg
  109  ls
  110  sudo apt install pinta
  111  pinta &
  112  ls
  113  convert nish.jpg nishi.pdf
  114  convert kanda.jpg kanda.pdf
  115  exit
  116  sudo apt update
  117  sudo apt upgrade
  118  sudo apt autoremove
  119  exit
  120  sudo apt update
  121  sudo apt upgrade
  122  sudo apt autoremove
  123  exit
  124  sudo apt update
  125  sudo apt upgrade
  126  exit
  127  sudo apt update
  128  sudo apt upgrade
  129  exit
  130  ls /var/lib
  131  ls /var/lib/fwupd
  132  sudo rm -r /var/lib/fwupd
  133  ls /var/lib/fwupd
  134  exit
  135  sudo apt update
  136  sudo apt upgrade
  137  sudo apt update
  138  sudo apt upgrade
  139  sudo apt autoremove
  140  exit
  141  sudo apt update
  142  sudo apt upgrade
  143  sudo apt autoremove
  144  exit
  145  sudo apt update
  146  sudo apt upgrade
  147  sudo apt autoremove
  148  exit
  149  sudo apt update
  150  sudo apt upgrade
  151  sudo apt autoremove
  152  exit
  153  sudo apt update
  154  sudo apt upgrade
  155  exit
  156  thunderbird -ProfileManager
  157  thunderbird -no-remote -P For_Development
  158  thunderbird -ProfileManager
  159  thunderbird -no-remote -P For_Development
  160  df
  161  cd work
  162  ls
  163  rm Travel Travel.msf Travel.zip.msf 
  164  ls
  165  rm Travel.zip 
  166  exit
  167  cd ドキュメント/
  168  ls
  169  nvim thunderbird_WebExtension.txt
  170  cat thunderbird_WebExtension.txt 
  171  cd
  172  cd .thunderbird/myalbmw4.default-release/
  173  ls
  174  cd Mail/Local\ Folders/
  175  ls
  176  less Travel.msf 
  177  ls Travel
  178  less Travel
  179  zip Travel.zip Travel*
  180  mv Travel* ~/work
  181  unzip ~/work/Travel.zip 
  182  cd ~/.thunderbird/
  183  ls
  184  cd wyfxjexy.For_Development/
  185  ls
  186  cd ..
  187  ls 48muyffw.default/
  188  ls
  189  48muyffw.default/
  190  cd 48muyffw.default/
  191  ls
  192  cd ..
  193  cd myalbmw4.default-release/
  194  ls
  195  cd Mail/
  196  ls
  197  cd Local\ Folders/
  198  ls
  199  cd
  200  sudo apt update
  201  sudo apt upgrade
  202  exit
  203  rubocop --version
  204  ruby --version
  205  nvim .rubocop.yml 
  206  nvim test/data_backup_test.rb 
  207  ./install
  208  cd
  209  ls
  210  ls .thunderbird/
  211  ls .thunderbird/myalbmw4.default-release/
  212  data_backup .thunderbird/myalbmw4.default-release/Mail/ /media/toshiyuki/DATA/Mail/
  213  data_backup .thunderbird/myalbmw4.default-release/Mail/ /media/toshiyuki/DATA/Mail/ -no_history
  214  data_backup .thunderbird/myalbmw4.default-release/Mail/ /media/toshiyuki/DATA/Mail/ -no_history >backup.sh
  215  nvim lib/ruby/run_data_backup.rb 
  216  ls
  217  exit
  218  ls
  219  mkdir Programs
  220  ls
  221  cd Programs/
  222  mkdir ruby
  223  cd ruby
  224  unzip ~/ダウンロード/data_backup.zip 
  225  cd data_backup/
  226  ls
  227  rake
  228  bundle install
  229  nvim Gemfile
  230  bundle install
  231  sudo bundle install
  232  ls
  233  mkdir vendor
  234  bundle config set --local path 'vendor/bundle'
  235  bundle install
  236  rubocop
  237  sudo apt install rubocop
  238  rubocop
  239  rubocop | less
  240  rake
  241  cd
  242  nvim bin/mail_backup
  243  chmod +x bin/mail_backup 
  244  mail_backup
  245  nvim backup.sh 
  246  mail_backup
  247  nvim backup.sh 
  248  ./backup.sh 
  249  mail_backup
  250  nvim backup.sh 
  251  rm backup.sh 
  252  exit
  253  mail_backup 
  254  cat backup.sh 
  255  ./backup.sh 
  256  rm backup.sh 
  257  exit
  258  sudo apt update
  259  sudo apt upgrade
  260  sudo apt autoremove
  261  exit
  262  sudo apt update
  263  sudo apt upgrade
  264  mail_backup 
  265  nvim backup.sh 
  266  ./backup.sh 
  267  rm backup.sh 
  268  exit
  269  data_backup Programs/ruby/data_backup/ /media/toshiyuki/DATA/Programs/ruby/data_backup/ >backup.sh
  270  nvim backup.sh 
  271  cp googleDrive/Programs/ruby/data_backup.zip .
  272  cd Programs/ruby/
  273  mv data_backup/ data_backup.old
  274  unzip ~/data_backup.zip 
  275  cd
  276  rm data_backup.zip 
  277  data_backup Programs/ruby/data_backup/ /media/toshiyuki/DATA/Programs/ruby/data_backup/ >backup.sh
  278  nvim backup.sh 
  279  grep '# --' backup.sh | sed -e '/# -- /s///' >check.sh
  280  nvim check.sh 
  281  bash check.sh 
  282  grep '# ---' check.sh | sed -e '/# --- /s///' > touch.sh
  283  nvim touch.sh 
  284  bash touch.sh 
  285  data_backup Programs/ruby/data_backup/ /media/toshiyuki/DATA/Programs/ruby/data_backup/ >backup.sh
  286  nvim backup.sh 
  287  bash backup.sh
  288  ls
  289  rm *.sh
  290  ls Programs/
  291  ls Programs/ruby/
  292  exit
  293  sudo apt update
  294  sudo apt upgrade
  295  exit
  296  sudo apt update
  297  sudo apt upgrade
  298  cd ダウンロード/
  299  unzip 259580-256692.zip 
  300  cd
  301  mail_backup 
  302  nvim backup.sh 
  303  bash backup.sh 
  304  rm backup.sh 
  305  exit
  306  cd Programs/
  307  ls
  308  cd passwd_sha1check/
  309  ls
  310  rake
  311  cp ~/googleDrive/household/pw.txt .
  312  vim pw.txt 
  313  ls
  314  nvim run_split.rb 
  315  ruby run_split.rb 
  316  ruby run_check.rb pw.txt
  317  ruby run_check.rb pw.txt >pw_check.txt 
  318  vim pw_check.txt 
  319  vim ~/googleDrive/household/pw_check.txt 
  320  diff ~/googleDrive/household/pw_check.txt pw_check.txt | less
  321  grep 'is in' pw_check.txt 
  322  grep 'is in' pw_check.txt  > pw_ng.txt
  323  df
  324  ls
  325  rm pwned-passwords-sha1-ordered-by-hash-v6
  326  ls -l
  327  rm pwned-passwords-sha1-ordered-by-hash-v6.txt 
  328  ls
  329  exit
  330  sudo apt update
  331  sudo apt upgrade
  332  sudo apt autoremove
  333  exit
  334  sudo apt update
  335  sudo apt upgrade
  336  exit
  337  pwgen 12
  338  sudo apt install pwgen
  339  pwgen 12 1
  340  pwgen 8 1
  341  exit
  342  passwd
  343  cd googleDrive/household/
  344  ls
  345  cat pw_ng.txt 
  346  grep corsa pw.txt 
  347  exit
  348  sudo apt install gimp
  349  cd ドキュメント
  350  ls
  351  convert ローン東神田_2022H2.pdf work1.jpg
  352  exit
  353  cd ダウンロード
  354  ls
  355  nvim *.txt
  356  sudo apt update
  357  sudo apt upgrade
  358  sudo apt autoremove
  359  sudo apt install chrome
  360  sudo apt update
  361  sudo apt upgrade
  362  sudo apt autoremove
  363  ls /etc/opt/chrome
  364  sudo mkdir /etc/opt/chrome
  365  sudo mkdir /etc/opt/chrome/policies
  366  sudo mkdir /etc/opt/chrome/policies/managed
  367  sudo mkdir /etc/opt/chrome/policies/recommended
  368  ls -l /etc/opt/chrome/policies/
  369  sudo chmod -w /etc/opt/chrome/policies/managed/
  370  ls -l /etc/opt/chrome/policies/
  371  ls -l /etc/opt/chrome/policies/managed/
  372  backup_mail
  373  mail_backup
  374  ls
  375  nvim backup.sh 
  376  bash  backup.sh 
  377  nvim .profile 
  378  rm backup.sh 
  379  ls googleDrive/
  380  ls googleDrive/pictures/
  381  nvim .profile 
  382  ls
  383  ls googleDrive/
  384  cat .profile
  385  google-drive-ocamlfuse ~/googleDrive/
  386  ls googleDrive/
  387  ls
  388  sudo apt update
  389  sudo apt upgrade
  390  exit
  391  sudo apt autoremove
  392  ls bin/*mail*
  393  mail_backup
  394  ls
  395  nvim backup.sh 
  396  bash backup.sh 
  397  rm backup.sh 
  398  ls /media/toshiyuki/DATA/Mail/
  399  ls /media/toshiyuki/DATA/
  400  cd ドキュメント
  401  ls
  402  cp thunderbird_mail_backup.txt /media/toshiyuki/DATA/Mail/
  403  cd
  404  exit
  405  sudo apt update
  406  sudo apt upgrade
  407  exit
  408  ls Programs/
  409  ls -l Programs/
  410  ls -l Programs/passwd_sha1check/
  411  df
  412  rails --version
  413  exit
  414  sudo apt update
  415  sudo apt upgrade
  416  sudo apt autoremove
  417  exit
  418  systemctl list-units --type=service
  419  nkf --version
  420  ruby --version
  421  git --version
  422  sudo apt update
  423  sudo apt install postgresql
  424  pg_ctlcluster 12 main start
  425  sudo pg_ctlcluster 12 main start
  426  sudo systemctl status postgresql
  427  sudo gem install rails
  428  sudo apt update
  429  sudo apt install nodejs
  430  curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
  431  sudo apt update
  432  sudo apt install yarn
  433  sudo apt install libpg-dev
  434  sudo apt install libpq-dev
  435  sudo gem install pg -v '1.2.3' --source 'https://rubygems.org/'
  436  nvim .bashrc
  437  exit
  438  rust
  439  curl --proto '=https' --tlsv1.2 https://sh.rustup.rs -sSf | sh
  440  sudo apt install llvm-dev libclang-dev clang
  441  cargo install bindgen
  442  nvim .bashrc
  443  exit
  444  df
  445  exit
  446  cargo install bindgen
  447  sudo apt install libbz2-dev
  448  ls Programs/
  449  cargo --version
  450  exit
  451  rails --version
  452  cd Programs/
  453  ls
  454  mkdir rails
  455  cd rails
  456  rails new hello_app
  457  sudo rails new hello_app
  458  sudo bundle install
  459  ls
  460  cd hello_app/
  461  sudo bundle install
  462  sudo bundle install sqlite3
  463  sudo apt install sqlite-devel
  464  sudo apt install sqlite-dev
  465  sudo apt search sqlite
  466  sudo apt install libsqlite3-dev
  467  cd ..
  468  sudo rails new hello_app
  469  rm -r hello_app/
  470  yes | sudo rm -r hello_app/
  471  rails new hello_app
  472  ls
  473  tree hello_app/
  474  sudo apt install tree
  475  tree hello_app/
  476  cd hello_app/
  477  nvim Gemfile
  478  gem list Gemfile
  479  gem list
  480  gem list Gemfile.lock 
  481  nvim Gemfile
  482  bundle install
  483  nvim Gemfile
  484  bundle install
  485  nvim Gemfile
  486  bundle install
  487  rails server
  488  rails server -b 192.168.3.8 -p 8080
  489  lsof -i -P | more
  490  nmap localhost
  491  sudo apt install nmap
  492  nmap localhost
  493  nmap 192.168.3.8
  494  ls /etc/sysconfig
  495  ls /etc
  496  ls /etc/init.d/
  497  sudo nfw satus
  498  sudo ufw status
  499  sudo ufw enable
  500  sudo ufw reload
  501  sudo ufw status
  502  sudo ufw allow 80
  503  sudo ufw status
  504  rails server -b 192.168.3.8 -p 80
  505  sudo ufw delete 80
  506  sudo ufw status
  507  sudo delete 80
  508  sudo ufw delete 1
  509  sudo ufw status
  510  sudo ufw delete 1
  511  sudo ufw reload
  512  sudo ufw allow 8080
  513  rails server -b 192.168.3.8 -p 8080
  514  sudo ufw delete 1
  515  sudo ufw status
  516  sudo ufw allow 8080
  517  sudu ufw status
  518  sudo ufw status
  519  sudo ufw delete 1 2
  520  sudo ufw status
  521  sudo ufw delete 1
  522  sudo ufw status
  523  sudo ufw reload
  524  rails server -b 192.168.3.8 -p 8080
  525  ls app/controllers/*.rb
  526  nvim app/controllers/application_controller.rb 
  527  nvim config/routes.rb 
  528  rails server -b 192.168.3.8 -p 8080
  529  nvim app/controllers/application_controller.rb 
  530  rails server -b 192.168.3.8 -p 8080
  531  nvim app/controllers/application_controller.rb 
  532  rails server -b 192.168.3.8 -p 8080
  533  nvim app/controllers/application_controller.rb 
  534  nvim config/routes.rb 
  535  rails server -b 192.168.3.8 -p 8080
  536  nvim app/controllers/application_controller.rb 
  537  rails server -b 192.168.3.8 -p 8080
  538  git config --global user.name "Toshiyuki Igarashi"
  539  git config --global user.email ged00475@gmail.com
  540  git init
  541  git add -A
  542  git status
  543  git commit -m "Initialize repository"
  544  cat ~/.ssh
  545  eval `ssh-agent`
  546  ssh-add ~/.ssh/id_rsa
  547  git remote -v
  548  git remote add origin git@bitbucket.org:toshiyuki_igarashi/hello_app.git
  549  git remote -v
  550  git push -u origin --all
  551  git log --oneline
  552  nvim app/controllers/application_controller.rb 
  553  cd ..
  554  gh repo clone toshiyuki-igarashi/simple-diary
  555  gh auth login
  556  ls
  557  gh repo clone toshiyuki-igarashi/simple-diary
  558  ls
  559  cd simple-diary/
  560  rails server
  561  nvim Gemfile
  562  bundle install
  563  rails server
  564  rails db:migrate RAILS_ENV=development
  565  rails server
  566  exit
  567  nvim Gemfile
  568  ifconfig
  569  ruby -v
  570  rails --version
  571  sudo apt update
  572  sudo apt upgrade
  573  ssh-keygen
  574  ls ~/.ssh
  575  cat ~/.ssh/id_rsa.pub 
  576  ssh -T git@bitbucket.org
  577  curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg && sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null && sudo apt update && sudo apt install gh -y
  578  rails c
  579  cd ../simple-diary/
  580  rails console
  581  ls app/controllers/
  582  nvim app/controllers/users_controller.rb 
  583  ls app/models/
  584  nvim app/models/user.rb 
  585  exit
  586  rails --help
  587  rails console
  588  exit
  589  cd Programs/rails/simple-diary/
  590  rails s
  591  rails s &
  592  exit
  593  ps
  594  pstree
  595  pstree -i
  596  pstree -p
  597  pstree -p >temp.txt
  598  nvim temp.txt 
  599  pstree -p >temp.txt
  600  nvim temp.txt 
  601  ps aux
  602  ps a
  603  exit
  604  pstree -p >temp1.txt
  605  nvim temp1.txt 
  606  fg 1171648
  607  fg 157060
  608  ps aux
  609  nvim temp1.txt 
  610  fg 45036
  611  kill 45036
  612  ps aux
  613  ps aux | grep toshi
  614  exit
  615  rails c
  616  cd Programs/rails/simple-diary/
  617  rails c
  618  ps
  619  ps a
  620  ps au
  621  ps ax
  622  cd
  623  ls
  624  pstree >temp.txt
  625  nvim temp.txt
  626  pstree >temp.txt
  627  nvim temp.txt
  628  top
  629  ps aux >temp.txt 
  630  nvim temp.txt 
  631  ps aux >temp.txt 
  632  nvim temp.txt 
  633  exit
  634  ls
  635  rm temp*
  636  ls
  637  exit
  638  ls
  639  umount googleDrive 
  640  tail .bashrc
  641  tail .profile 
  642  google-drive-ocamlfuse ~/googleDrive/
  643  ls googleDrive/computers/linux/home/
  644  cp googleDrive/computers/linux/home/bin/* bin
  645  cp googleDrive/computers/linux/home/lib/ruby/* lib/ruby/
  646  chmod +x bin/*
  647  cnv_mizuho
  648  ls
  649  rm *.csv
  650  ls $DOWNLOADS
  651  cnv_tokyostar
  652  rm *.csv
  653  cnv_mitsui
  654  rm *.csv
  655  cnv_resona
  656  rm *.csv
  657  cnv_shizugin
  658  rm *.csv
  659  cnv_kakei
  660  rm *.csv
  661  cnv_pasmo
  662  rm *.csv
  663  ls googleDrive/
  664  exit
  665  sudo apt update
  666  sudo apt upgrade
  667  exit
  668  cd Programs/rails/simple-diary/
  669  ls app/views/
  670  ls app/views/users/
  671  nvim app/views/users/edit.html.erb 
  672  nvim app/views/users/_profile_input.html.erb 
  673  ls app/views/diary_forms/
  674  nvim app/views/diary_forms/download.html.erb 
  675  nvim config/routes.rb 
  676  ls app/controllers/
  677  nvim app/controllers/diary_forms_controller.rb 
  678  nvim app/controllers/diaries_controller.rb 
  679  exit
  680  sudo apt updaate
  681  sudo apt update
  682  sudo apt upgrade
  683  cd Programs/rails/simple-diary/
  684  grep make_download app/*/*
  685  grep make_diary_date app/*/*
  686  grep make_diary_data app/*/*
  687  grep get_all_diary app/*/*
  688  ls app/models/
  689  ls
  690  ls db
  691  nvim db/schema.rb 
  692  exit
  693  cd Programs/rails/simple-diary/
  694  ls
  695  ls log
  696  ls public/
  697  ls public/data
  698  nvim README.md 
  699  nvim temp.txt
  700  rm temp.txt 
  701  rails --help
  702  rails --help server
  703  rails -h s
  704  rails s -h
  705  rails s -e production
  706  ls config
  707  nvim config/credentials.yml.enc 
  708  nvim config/secrets.yml 
  709  exit
  710  curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
  711  sudo apt-key del 23F3D4EA75716059
  712  curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
  713  sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
  714  echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
  715  sudo apt update
  716  sudo apt upgrade
  717  cd Programs/
  718  ls
  719  cd rails
  720  ls
  721  cp ~/googleDrive/Programs/rails/monolist.tar.gz .
  722  tar xvfz monolist.tar.gz 
  723  ls
  724  ls -l
  725  rm monolist.tar.gz 
  726  tar xvfz ~/ダウンロード/monolist.tar.gz 
  727  ls
  728  cd monolist/
  729  ls
  730  bundle install
  731  nvim Gemfile
  732  bundle install
  733  ls -a
  734  nvim Gemfile
  735  bundle install
  736  rm Gemfile.lock 
  737  bundle install
  738  rails db:migrate
  739  nvim config/database.yml 
  740  history >h.log
